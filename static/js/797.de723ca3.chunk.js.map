{"version":3,"file":"static/js/797.de723ca3.chunk.js","mappings":"sMA0BMA,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAhBL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACrC,OACI,kBAAMC,SAAUH,EAAhB,WACKI,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,GAAWC,EAAAA,KAC1CF,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,GAAWC,EAAAA,GAAO,YAEvDJ,IAAc,gBAAKK,IAAKL,EAAYM,IAAI,YACxCN,IAAcE,EAAAA,EAAAA,IAAY,gBAAiB,UAAW,CAACC,EAAAA,GAAWC,EAAAA,GAAO,GAAI,KAE9E,sCACCL,IAAS,gBAAKQ,UAAWC,EAAAA,EAAAA,iBAAhB,SAAqCT,UA6BrDU,EAAwB,CAC1BC,QAAAA,EAAAA,IAIJ,WAAeC,EAAAA,EAAAA,KAVS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACnBb,WAAYY,EAAME,KAAKd,cAQaS,EAAxC,EA1Bc,SAACM,GACX,IAAIC,GAAWC,EAAAA,EAAAA,MAOf,OAHIF,EAAMF,QACNG,EAAS,eAGT,4BACI,mCACA,SAACrB,EAAD,CAAgBM,SATP,SAACiB,GACdH,EAAML,QAAQQ,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAQvCtB,WAAYe,EAAMf,oB,2NCnC5DuB,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAAS3B,EAAsB,EAAtBA,MAAQ4B,EAAc,EAAdA,SAC3CC,EAAWF,GAAW3B,EAC5B,OACI,iBAAKQ,UAAWC,EAAAA,EAAAA,YAAgB,KAAOoB,EAAWpB,EAAAA,EAAAA,MAAU,IAA5D,UACKmB,EACAC,IAAY,0BAAO7B,QAKnB8B,EAAW,SAACd,GACrB,IAAOS,EAAoCT,EAApCS,MAAuBM,GAAaf,EAA7BU,KAA6BV,EAAvBgB,OAApB,OAA2ChB,EAA3C,IACA,OAAO,SAACQ,GAAD,kBAAiBR,GAAjB,cAAwB,uCAAcS,GAAWM,QAG/C1B,EAAQ,SAACW,GAClB,IAAOS,EAAoCT,EAApCS,MAAuBM,GAAaf,EAA7BU,KAA6BV,EAAvBgB,OAApB,OAA2ChB,EAA3C,IACA,OAAO,SAACQ,GAAD,kBAAiBR,GAAjB,cAAwB,oCAAWS,GAAWM,QAG5C5B,EAAc,SAAC8B,EAAaC,EAAMC,EAAYC,GAAyC,IAA9BC,EAA6B,uDAAxB,OAAQC,EAAgB,uDAAT,KACtF,OACI,4BACI,SAAC,IAAD,CAAOF,UAAWA,EACXF,KAAMA,EACNK,SAAUJ,EACVE,KAAMA,EACNJ,YAAaA,IALxB,IAKwCK,O,0EC/BzC,IAAMlC,EAAW,SAAAoC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAAAF,GAC3C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCL3C,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB","sources":["components/Login/Login.jsx","components/common/FormsControls/FormsControl.jsx","utils/validators/validator.js","webpack://test-sn/./src/components/common/FormsControls/FormsControls.module.scss?b614"],"sourcesContent":["import React from \"react\"\r\nimport {reduxForm} from \"redux-form\"\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\n\r\nimport {createField, Input} from \"../common/FormsControls/FormsControl\"\r\nimport {required} from \"../../utils/validators/validator\"\r\nimport {loginTC} from \"../../redux/auth-reducer\"\r\nimport s from '../common/FormsControls/FormsControls.module.scss'\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, 'password')}\r\n            {/*{createField(null, 'rememberMe', [], Input, 'checkbox', 'remember me')}*/}\r\n            {captchaUrl && <img src={captchaUrl} alt='captcha'/>}\r\n            {captchaUrl && createField('Enter captcha', 'captcha', [required], Input, '', '')}\r\n\r\n            <button>Login</button>\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    let navigate = useNavigate()\r\n    const onSubmit = (formData) => {\r\n        props.loginTC(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        navigate('../profile')\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nconst mapDispatchToStateObj = {\r\n    loginTC\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToStateObj)(Login)","import React from \"react\";\r\nimport s from './FormsControls.module.scss'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            {children}\r\n            {hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, type='text', text = null) => {\r\n    return (\r\n        <div>\r\n            <Field component={component}\r\n                   name={name}\r\n                   validate={validators}\r\n                   type={type}\r\n                   placeholder={placeholder}/> {text}\r\n        </div>\r\n    )\r\n}\r\n","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max lenght is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__OioOu\",\"error\":\"FormsControls_error__fRhA6\",\"formSummaryError\":\"FormsControls_formSummaryError__7CWu8\"};"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","captchaUrl","onSubmit","createField","required","Input","src","alt","className","s","mapDispatchToStateObj","loginTC","connect","state","isAuth","auth","props","navigate","useNavigate","formData","email","password","rememberMe","captcha","FormControl","input","meta","touched","children","hasError","Textarea","restProps","child","placeholder","name","validators","component","type","text","validate","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}
{"version":3,"file":"static/js/496.7c661c08.chunk.js","mappings":"4KACA,GAAgB,QAAU,0BAA0B,eAAiB,iCAAiC,WAAa,6BAA6B,kBAAoB,oCAAoC,YAAc,+B,kECIlNA,GAAcC,EAAAA,EAAAA,GAAiB,IAcnC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAhC,EAZuB,SAACC,GACpB,OACI,kBAAMC,SAAUD,EAAME,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GACXC,KAAM,iBACNC,SAAU,CAACC,EAAAA,EAAUZ,GACrBa,YAAa,wBACpB,2CCRNC,EAAa,SAACV,GAChB,IAAIW,EAAO,YAAcX,EAAMY,GAC/B,OACI,gBAAKC,UAAWC,EAAAA,KAAhB,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SACKX,EAAMM,UAMjBU,EAAc,SAAChB,GACjB,OACI,gBAAKa,UAAWC,EAAAA,YAAhB,UACI,uBACKd,EAAMiB,UAmCvB,EA7BiB,SAACjB,GACd,IAAIkB,EAAQlB,EAAMmB,aAEdC,EAAmBF,EAAMG,gBAAgBC,KAAI,SAAAC,GAAM,OAAI,SAACb,EAAD,CAAYJ,KAAMiB,EAAOjB,KAAMM,GAAIW,EAAOX,QACjGY,EAAgBN,EAAMO,aAAaH,KAAI,SAAAI,GAAQ,OAAI,SAACV,EAAD,CAAaC,KAAMS,EAAST,UAMnF,OAAKjB,EAAM2B,QAGP,iBAAKd,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,eAAhB,SACKM,KAEL,iBAAKP,UAAWC,EAAAA,kBAAhB,WACI,yBAAMU,KACN,0BACI,SAAC,EAAD,CAAgBvB,SAdZ,SAAC2B,GACjB5B,EAAM6B,YAAYD,EAAOE,4BAGH,SAAC,KAAD,CAAUf,GAAI,Y,0DCjCxCgB,EAA6B,SAACb,GAAD,MAAY,CACzCS,OAAQT,EAAMc,KAAKL,S,UCWnBM,EAAwB,CACxBJ,YAAAA,EAAAA,IAGEK,GAAqBC,EAAAA,EAAAA,KACvBC,EAAAA,EAAAA,KAXkB,SAAClB,GACnB,MAAO,CACHC,aAAcD,EAAMC,gBASCc,IDbG,SAACI,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAKC,KAAKvC,MAAM2B,QACT,SAACU,GAAD,UAAeE,KAAKvC,SADI,SAAC,KAAD,CAAUe,GAAI,eAJV,GAEXyB,EAAAA,WAShC,OAFqCJ,EAAAA,EAAAA,IAAQL,EAARK,CAAoCE,KCGlDH,CAGzBM,GAEF","sources":["webpack://test-sn/./src/components/Messages/Messages.module.css?8e7e","components/Messages/AddMessagesForm.js","components/Messages/Messages.js","components/hoc/withAuthRedirect.js","components/Messages/MessagesContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Messages_dialogs__N8bDl\",\"dialogItemsBox\":\"Messages_dialogItemsBox__DF1uD\",\"dialogItem\":\"Messages_dialogItem__Qxa+5\",\"dialogMessagesBox\":\"Messages_dialogMessagesBox__OCUom\",\"messageItem\":\"Messages_messageItem__eDtXq\"};","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validator\";\r\n\r\nlet maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   name={'newMessageBody'}\r\n                   validate={[required, maxLength50]}\r\n                   placeholder={'Enter your message'}/>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n","import React from 'react'\r\nimport s from './Messages.module.css'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessagesForm\";\r\nimport {maxLengthCreator} from \"../../utils/validators/validator\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={s.item}>\r\n            <NavLink to={path}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={s.messageItem}>\r\n            <p>\r\n                {props.text}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Messages = (props) => {\r\n    let state = props.messagesPage\r\n\r\n    let dialogItemsDataC = state.dialogItemsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>)\r\n    let messagesDataC = state.messagesData.map(messages => <MessageItem text={messages.text}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItemsBox}>\r\n                {dialogItemsDataC}\r\n            </div>\r\n            <div className={s.dialogMessagesBox}>\r\n                <div>{messagesDataC}</div>\r\n                <div>\r\n                    <AddMessageForm onSubmit={addNewMessage}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Messages","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react'\r\nimport {\r\n    sendMessageAC as sendMessage,\r\n} from \"../../redux/messages-reducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToStateObj = {\r\n    sendMessage\r\n}\r\n\r\nconst MessagesContainerC = compose(\r\n    connect(mapStateToProps, mapDispatchToStateObj),\r\n    withAuthRedirect\r\n)(Messages)\r\n\r\nexport default MessagesContainerC"],"names":["maxLength50","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","DialogItem","path","id","className","s","to","MessageItem","text","state","messagesPage","dialogItemsDataC","dialogItemsData","map","dialog","messagesDataC","messagesData","messages","isAuth","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","mapDispatchToStateObj","MessagesContainerC","compose","connect","Component","RedirectComponent","this","React","Messages"],"sourceRoot":""}
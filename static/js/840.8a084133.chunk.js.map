{"version":3,"file":"static/js/840.8a084133.chunk.js","mappings":"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","sources":["webpack://test-sn/./src/components/Messages/Messages.module.scss?b126","components/Messages/AddMessagesForm.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx","components/common/FormsControls/FormsControl.jsx","utils/validators/validator.js","webpack://test-sn/./src/components/common/FormsControls/FormsControls.module.scss?b614"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Messages_dialogs__j8w0C\"};","import {Field, reduxForm} from \"redux-form\"\r\nimport React from \"react\"\r\nimport {Textarea} from \"../common/FormsControls/FormsControl\"\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validator\"\r\n\r\nlet maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   name={'newMessageBody'}\r\n                   validate={[required, maxLength50]}\r\n                   placeholder={'Enter your message'}/>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n","import React from 'react'\r\nimport s from './Messages.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessagesForm\";\r\n\r\nconst DialogItem = (props) => (\r\n    <div className={s.item}>\r\n        <NavLink to={'/dialogs/' + props.id}>\r\n            {props.name}\r\n        </NavLink>\r\n    </div>\r\n)\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={s.messageItem}>\r\n            <p>\r\n                {props.text}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Messages = (props) => {\r\n    let state = props.messagesPage\r\n\r\n    let dialogItemsDataC = state.dialogItemsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>)\r\n    let messagesDataC = state.messagesData.map(messages => <MessageItem text={messages.text}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessageAC(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItemsBox}>\r\n                {dialogItemsDataC}\r\n            </div>\r\n            <div className={s.dialogMessagesBox}>\r\n                <div>{messagesDataC}</div>\r\n                <div>\r\n                    <AddMessageForm onSubmit={addNewMessage}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Messages","import React, {useEffect} from 'react'\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\n\r\nimport {sendMessageAC} from \"../../redux/messages-reducer\";\r\n\r\nimport Messages from \"./Messages\";\r\n\r\nconst MessagesContainer = (props) => {\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (!props.isAuth) navigate('../login')\r\n    }, [props.isAuth])\r\n\r\n    return (\r\n        <Messages {...props}/>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    messagesPage: state.messagesPage,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {sendMessageAC})(MessagesContainer)","import React from \"react\";\r\nimport s from './FormsControls.module.scss'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            {children}\r\n            {hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, type='text', text = null) => {\r\n    return (\r\n        <div>\r\n            <Field component={component}\r\n                   name={name}\r\n                   validate={validators}\r\n                   type={type}\r\n                   placeholder={placeholder}/> {text}\r\n        </div>\r\n    )\r\n}\r\n","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max lenght is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__OioOu\",\"error\":\"FormsControls_error__fRhA6\",\"formSummaryError\":\"FormsControls_formSummaryError__7CWu8\"};"],"names":["maxLength50","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","DialogItem","className","s","to","id","MessageItem","text","state","messagesPage","dialogItemsDataC","dialogItemsData","map","dialog","messagesDataC","messagesData","messages","values","sendMessageAC","newMessageBody","connect","isAuth","auth","navigate","useNavigate","useEffect","FormControl","input","meta","touched","error","children","hasError","restProps","child","Input","createField","validators","type","value","maxLength","length"],"sourceRoot":""}
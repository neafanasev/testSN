{"version":3,"file":"static/js/152.949188cd.chunk.js","mappings":"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","sources":["webpack://test-sn/./src/components/Profile/Profile.module.scss?4008","webpack://test-sn/./src/components/Profile/ProfileInfo/ProfileInfo.module.scss?e49f","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://test-sn/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://test-sn/./src/components/Profile/MyPosts/Post/Post.module.scss?ca59","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControl.jsx","utils/validators/validator.js","webpack://test-sn/./src/components/common/FormsControls/FormsControls.module.scss?b614"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contentWrapper\":\"Profile_contentWrapper__tlmjO\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileHeader\":\"ProfileInfo_profileHeader__w-EwC\",\"picture\":\"ProfileInfo_picture__eAtm3\",\"info\":\"ProfileInfo_info__2Ue3O\",\"name\":\"ProfileInfo_name__NGNZM\",\"mainPhoto\":\"ProfileInfo_mainPhoto__WruGo\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.scss';\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatusTC(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileStatus}>\r\n            {!editMode ?\r\n                <div>\r\n                    <h2>Status</h2><p onDoubleClick={activateEditMode}>{props.status || '-----'}</p>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input onBlur={deactivateEditMode}\r\n                           onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react'\r\nimport s from './ProfileInfo.module.scss'\r\nimport Preloader from \"../../common/Preloader/Preloader\"\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\n\r\nconst ProfileInfo = ({profile, status, updateStatusTC, isOwner, savePhotoTC}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    // const onMainPhotoSelected = (e) => {\r\n    //     if (e.target.files.length) {\r\n    //         savePhotoTC(e.target.files[0])\r\n    //     }\r\n    // }\r\n    //make choose type only img\r\n    //make savephoto live update by using hooks, make fnc for setting photo\r\n\r\n\r\n    return (\r\n        <div className={s.profileHeader}>\r\n            <div className={s.picture}>\r\n                <img alt=\"\" src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {/*{isOwner && <div><input type={'file'} onChange={onMainPhotoSelected}/></div>}*/}\r\n            </div>\r\n            <div className={s.info}>\r\n                <ProfileData profile={profile}/>\r\n                <ProfileStatus status={status} updateStatusTC={updateStatusTC} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile}) => {\r\n    return (\r\n        <div>\r\n            <div className={s.name}>\r\n                <h1>\r\n                    {profile.fullName}\r\n                </h1>\r\n            </div>\r\n            {/*<div>*/}\r\n            {/*    Looking for a job: {profile.lookingForAJob ? 'yes' : 'no'}*/}\r\n            {/*</div>*/}\r\n            {/*{profile.lookingForAJob &&*/}\r\n            {/*    <div>*/}\r\n            {/*        {profile.lookingForAJobDescription}*/}\r\n            {/*    </div>*/}\r\n            {/*}*/}\r\n            {/*<div>*/}\r\n            {/*    About me: {profile.aboutMe}*/}\r\n            {/*</div>*/}\r\n            {/*<div>*/}\r\n            {/*    Contacts: {Object.keys(profile.contacts).map(key => (*/}\r\n            {/*    <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>*/}\r\n            {/*))}*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            <b>{contactTitle}</b>: {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__RD1fK\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__UKfxu\"};","import React from 'react';\r\nimport s from './Post.module.scss'\r\n\r\n\r\nconst Post = (props) => (\r\n    <div className={s.item}>\r\n        <img alt=\"\" src=\"https://img.scoop.it/cKAEfvNSTJwCa79cmbVddoXXXL4j3HpexhjNOf_P3YmryPKwJ94QGRtDb3Sbc6KY\"/>\r\n        <p>\r\n            {props.message}\r\n        </p>\r\n        {/*<p>Likes: {props.likes}</p>*/}\r\n    </div>\r\n)\r\n\r\nexport default Post","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\"\r\n\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\"\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\"\r\n\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\n\r\nlet maxLength10 = maxLengthCreator(10)\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   name={'newPostText'}\r\n                   validate={[required, maxLength10]}\r\n                   placeholder='What`s new?'/>\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) =>  {\r\n    let PostsDataC = props.PostsData.map(\r\n        post => <Post id={post.id} userid={post.userid} likes={post.likes} message={post.msg}/>\r\n    )\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPostAC(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h2>My posts</h2>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {PostsDataC}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport {addPostAC} from \"./../../../redux/profile-reducer\"\r\nimport MyPosts from \"./MyPosts\"\r\n\r\nconst mapStateToProps = (state) => ({\r\n    newPostText: state.profilePage.newPostText,\r\n    PostsData: state.profilePage.PostsData\r\n})\r\n\r\nexport default connect(mapStateToProps, {addPostAC})(MyPosts)","import React from 'react';\r\nimport s from './Profile.module.scss'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.contentWrapper}>\r\n            <ProfileInfo profile={props.profile}\r\n                         isOwner={props.isOwner}\r\n                         status={props.status}\r\n                         savePhotoTC={props.savePhotoTC}\r\n                         updateStatusTC={props.updateStatusTC}/>\r\n            {props.isOwner && <MyPostsContainer/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {useParams, useNavigate} from \"react-router-dom\";\r\n\r\nimport {\r\n    getStatusTC, getUserProfileTC,\r\n    savePhotoTC, updateStatusTC\r\n} from \"../../redux/profile-reducer\";\r\n\r\nimport Profile from \"./Profile\";\r\n\r\n\r\nconst ProfileContainer = (props) => { // сократить до двух рендеров\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    const refreshProfile = () => {\r\n        let userId = !!params.userId ? params.userId : props.authorizedUserId\r\n\r\n        if (!!userId) {\r\n            props.getUserProfileTC(userId)\r\n            props.getStatusTC(userId)\r\n        } else {\r\n            navigate('../login')\r\n        }\r\n    }\r\n\r\n\r\n    // componentDidMount\r\n    useEffect(() => {\r\n        refreshProfile()\r\n    }, [])\r\n\r\n\r\n    // componentDidUpdate\r\n    useEffect(() => {\r\n        refreshProfile()\r\n    }, [params.userId, props.isAuth])\r\n\r\n\r\n    return (\r\n        <Profile isOwner={!params.userId}\r\n                 profile={props.profile}\r\n                 status={props.status}\r\n                 savePhotoTC={props.savePhotoTC}\r\n                 updateStatusTC={props.updateStatusTC}/>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nlet mapDispatchToState = {\r\n    getUserProfileTC, getStatusTC,\r\n    updateStatusTC, savePhotoTC\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(ProfileContainer)\r\n\r\n","import React from \"react\";\r\nimport s from './FormsControls.module.scss'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            {children}\r\n            {hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, type='text', text = null) => {\r\n    return (\r\n        <div>\r\n            <Field component={component}\r\n                   name={name}\r\n                   validate={validators}\r\n                   type={type}\r\n                   placeholder={placeholder}/> {text}\r\n        </div>\r\n    )\r\n}\r\n","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max lenght is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__OioOu\",\"error\":\"FormsControls_error__fRhA6\",\"formSummaryError\":\"FormsControls_formSummaryError__7CWu8\"};"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onBlur","updateStatusTC","onChange","e","currentTarget","value","autoFocus","onDoubleClick","ProfileData","profile","fullName","isOwner","savePhotoTC","alt","src","photos","large","userPhoto","Preloader","message","maxLength10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","reduxForm","form","React","PostsDataC","PostsData","map","post","id","userid","likes","msg","values","addPostAC","newPostText","connect","state","profilePage","MyPosts","MyPostsContainer","mapDispatchToState","getUserProfileTC","getStatusTC","authorizedUserId","auth","userId","isAuth","params","useParams","navigate","useNavigate","refreshProfile","FormControl","input","meta","touched","error","children","hasError","restProps","child","Input","createField","validators","type","text","maxLength","length"],"sourceRoot":""}